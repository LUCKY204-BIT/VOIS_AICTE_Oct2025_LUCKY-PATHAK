# -*- coding: utf-8 -*-
"""Airbnb data analysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1LsaMWQDod56Hy_vJURKMXRZXLEj7dBfw
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

df=pd.read_excel('/content/Airbnb_Open_Data.xlsx')

df.head()

df.info()

df.duplicated().value_counts()

#Neighbourhood group was 'brookln'insted of 'Brooklyn'
df[df['neighbourhood group'] == 'brookln']

#Drop duplicate records
df.drop_duplicates(inplace=True)

#drop house_rules and license columns with insufficient data
df.drop(['house_rules','license'], axis = 1, inplace= True)

#Remove all dollar signs in the price and service fee columns
df['price'] = df['price'].astype(str).str.replace('$','', regex= False)
df['service fee'] = df['service fee'].astype(str).str.replace('$','', regex= False)

#Remove all commas in the price and service fee columns
df['price'] = df['price'].astype(str).str.replace(',','', regex= False)
df['service fee'] = df['service fee'].astype(str).str.replace(',','', regex= False)

#Rename the price and service fee columns to include a dollor sign
df.rename(columns={'price':'price_$', 'service fee':'service_fee_$'}, inplace=True)

#Drop all records with missing values
df.dropna(inplace=True)

#Change all mismatched data types to appropriate once
df['price_$'] = df['price_$'].astype(float)
df['service_fee_$'] = df['service_fee_$'].astype(float)
df['id'] = df['id'].astype(str)
df['host id'] = df['host id'].astype(str)
df['last review'] = pd.to_datetime(df['last review'])
df['Construction year'] = df['Construction year'].astype(int)

#Correct the spelling of 'brookln' to 'Brooklyn'
df.loc[df['neighbourhood group'] == 'brookln' , 'neighbourhood group'] = 'Brooklyn'

#Get rid of outliers in the 'availability 365' clumn data
df = df.drop(df[df['availability 365']>500].index)

df.info()

df.describe()

#Different property type in dataset
property_type = df['room type'].value_counts().to_frame()
display(property_type)

#Room type plotted on barchart
room_type_bar = plt.bar(property_type.index, property_type.loc[:,"count"]);
plt.bar_label(room_type_bar, labels = property_type.loc[:,"count"], padding=4 );
plt.ylim(0,50000);
plt.xlabel('Room type')
plt.ylabel('room type count')
plt.title('Property Types and their count in the Dataset')

"""The Airbnb datset gives distinct type of property or room types.
These are followings:
1. Entire home
2. Private Room
3. Shared Room
4. Hotel Room
"""

hood_group = df['neighbourhood group'].value_counts().to_frame()
hood_group

#Neighborhood group which have highest number of listings
hood_group_bar = plt.bar(hood_group.index, hood_group.loc[:,"count"]);
plt.bar_label(hood_group_bar, labels = hood_group.loc[:,"count"], padding=4);
plt.ylim([0,40000]);
plt.xlabel('neighbourhood group');
plt.ylabel('number of listings')
plt.title('Neighborhood group which have highest number of listings')

"""The above chart show the top neighbourhoods which have highest number of listings namely Brooklyn, Manhattan, Queens, Bronx and Staten Island.

"""

#Which neighbourhood group have the highest average prices for Arbnb listings ?
avg_price = df.groupby('neighbourhood group')['price_$'].mean().sort_values(ascending= False).to_frame()
avg_price_bar = plt.bar(avg_price.index, avg_price.loc[:,'price_$']);
plt.bar_label(avg_price_bar, labels = round(avg_price.loc[:,"price_$"], 2), label_type='edge', padding = 4)
plt.ylim(0,700);
plt.xlabel('neighbourhood group')
plt.ylabel('average price per listings($)');
plt.xticks(rotation = 45);
plt.title('Average Price per listings ($) in each Neighbourhood Group')

"""Among the five identified neighborhood groups in the dataset, Queens boasts the highest average listing price at 630.54 USD, closely tralled by the Bronx with an average listing price of 630.34 USD. Conversely, Staten Island records the lowest average listing price at 622.91 USD"""

#Is there a relationship between the construction year of property and price ?
df.groupby(df['Construction year'])['price_$'].mean().to_frame().plot();
plt.xlabel('construction year');
plt.ylabel('average price($)');
plt.title('Average Price ($) for Properties in each Contruction Year');

"""The line plot depicting the construction year of properties versus the average price per property reveals a noticeable downward trend in prices as the construction years progress. The pattern demonstrates decreasing lows and highs, suggesting an overall decline in property prices as time progresses"""

#who are the top hosts by calculated host listing count?
hosts = df.groupby('host name')['calculated host listings count'].sum().sort_values(ascending = False).nlargest(10).to_frame()
hosts_bar = plt.bar(hosts.index, hosts.loc[:,'calculated host listings count']);
plt.bar_label(hosts_bar, label = hosts.loc[:, 'calculated host listings count'], label_type = 'edge', padding = 3);
plt.xlabel('Hosts Name');
plt.ylabel('Calculated Host Listings Count');
plt.xticks(rotation = 80);
plt.ylim([0, 120000]);
plt.title('Top 10 Hosts by Calculated host Listings Count');

"""The bar chart above illustrates the top 10 hosts based on the calculated listing count,
1. with Sonder (NYC) notably leading with 111,921 listings.
Subsequently, the other hosts follow in descending order.
2. Karen at second postion with 42413 hosts
3. Jeniffer at third position with 31447 hosts
4. Blueground at fourth position with 21168 hosts
5. Kaz at fifth position with 17713 hosts
6. Corporate Housing at sixth position with 15015 hosts
7. Soya at seventh positon with 10602 hosts
8. Stay with vibe at eight position with 10368 hosts
9. Kara at ninth position with 10357 hosts
10. and finally Jeremy and Laura at tenth position 10092 hosts
"""

#Are hosts with verified identities more likely to receive positive reviews?
review = df.groupby('host_identity_verified')['review rate number'].mean().sort_values(ascending=False).to_frame()
review

review_bar =plt.bar(review.index, review.loc[:,"review rate number"]);
plt.bar_label(review_bar, labels = round(review.loc[:,"review rate number"], 2), padding = 4);
plt.ylim([0,4]);
plt.xlabel('Host Verification Status')
plt.ylabel('Average Review Rate Number')
plt.title('Average Review Rate for each Verification Statistics.');

#Is there a correlation between the price of a listing and it's service fee?
df['price_$'].corr(df['service_fee_$'])

"""The Pearson correlation coefficient between the price and service fee is 0.99, indicating a highly robust positive correlation between these variables. On the regression plot, each point forms a rising diagonal line towards the right, signifying that as the price of a property increases, so does its service fee."""

sns.regplot(df, x='price_$', y='service_fee_$');
plt.xlabel('price ($)');
plt.ylabel( 'service fee ($)');
plt.title('A regression plot showing the correlation of the price of a listing and its service fee. ')

#what is the average review rate number (e.g., stars) for listings, and does it vary based on the neighborhood group and room type?
ARRN = df.groupby(['neighbourhood group', 'room type'])['review rate number'].mean().to_frame()
ARRN

plt.figure(figsize = [12,10]);
sns.barplot(data=df, x = 'neighbourhood group', y = 'review rate number', hue = 'room type');
plt.xlabel('neighbourhood group');
plt.ylabel('Average Review Rate');
plt.title('Average Review Ratefor each Room/Property Type in each Neighbourhood Group.');

#Are hosts with a higher calculated host listings count more likely to maintain higher availability throughout the year?
sns.regplot(df, x='calculated host listings count', y = 'availability 365');
plt.xlabel('Calculated Host Listings')
plt.ylabel('Availaibility 365')
plt.title('A Regression Plot of the Relationship between calculated Host Listings Count and Availability 365');

df['calculated host listings count'].corr(df['availability 365'])

"""The Pearson correlation coefficient between the calculated host listings count and availabiliy is 0.14

Conclusion

In conclusion, this project has provided a comprehensive analysis of the New York City Airbnb dataset, shedding light on various aspects of the short-term lodging market. Through data wrangling, exploratory data analysis (EDA), and interpretation of summary statistics, we've uncovered valuable insights into listing distribution, pricing dynamics, host, and review analysis.

Key findings include the dominance in counts of Entire home/apt listings, the variability in listing counts across neighborhood groups, and the downward trend between property construction year and price. Additionally, the analysis highlighted the significance of verified host status on review rates, as well as the strong correlation between listing price and service fee.

Furthermore, conducting sentiment analysis on guest reviews to understand factors driving customer satisfaction and preferences could inform targeted marketing strategies and product improvements for Airbnb. Lastly, expanding the analysis to include predictive modeling techniques, such as regression or machine learning algorithms, could enable forecasting of listing demand, pricing trends, and customer behavior, facilitating strategic decision-making for stakeholders in the short-term lodging industry
"""